#1) İstifadəçidən iki rəqəm və bir əməliyyat (toplama, çıxma, vurma, bölmə) daxil etməsini tələb edən funksiya yazın. Mümkün xətaları (ValueError, TypeError və s.) idarə edin və müvafiq mesajlar çıxarın. Sonda da "Hesablama bitdi" mesajı çap olunsun.
def hesabla():
    try:
        a = float(input())
        b = float(input())
        əməl = input()
        if əməl == "+":
            print(a + b)
        elif əməl == "-":
            print(a - b)
        elif əməl == "*":
            print(a * b)
        elif əməl == "/":
            print(a / b)
        else:
            print("Əməliyyat düzgün deyil")
    except ValueError:
        print("Dəyər xətası")
    except TypeError:
        print("Tip xətası")
    except ZeroDivisionError:
        print("Sıfıra bölmə xətası")
    finally:
        print("Hesablama bitdi")

#2) 1-dən 50-yə qədər olan rəqəmlərdən yalnız 11ə qalıqsız bölünənlərini list olaraq qaytarın.
def bolunen_11():
    return [i for i in range(1, 51) if i % 11 == 0]

#3) Verilmiş sözlər siyahısından (["kitab", "qələm", "defter", "silgi"]) hər sözün ilk hərfini list olaraq qaytarın.
def ilk_herfler():
    sözlər = ["kitab", "qələm", "defter", "silgi"]
    return [s[0] for s in sözlər]

#4) Şəhər adları (["Bakı", "Gəncə", "Sumqayıt"]) və kodları ([12, 22, 18]) siyahılarından {şəhər: kod} dictionary olaraq qaytarın.
def seher_kodlari():
    şəhərlər = ["Bakı", "Gəncə", "Sumqayıt"]
    kodlar = [12, 22, 18]
    return dict(zip(şəhərlər, kodlar))

#5) Kilometri milə çevirən (mil = km * 0.621371) lambda funksiyası yazın və 5 fərqli dəyər üçün yoxlayın.
def km_to_mil():
    çevrir = lambda km: km * 0.621371
    dəyərlər = [1, 5, 10, 25, 100]
    return list(map(çevrir, dəyərlər))

#6) [100, 200, 300, 400] qiymətlərinə 18% vergi əlavə etmək üçün map() və lambda istifadə edin.
def vergi_elave_et():
    qiymətlər = [100, 200, 300, 400]
    return list(map(lambda x: x * 1.18, qiymətlər))

#7) [3, 7, 12] və [2, 4, 6] siyahılarının elementlərini ikiqat artırmaq və sonra cəmləmək üçün map() istifadə edin.
def ikiqat_cem():
    a = [3, 7, 12]
    b = [2, 4, 6]
    return list(map(lambda x, y: (x*2)+(y*2), a, b))

#8) [150, 80, 220, 45] siyahısından ən kiçik qiyməti reduce() ilə tapın.
from functools import reduce
def en_kicik():
    qiymətlər = [150, 80, 220, 45]
    return reduce(lambda x, y: x if x < y else y, qiymətlər)
